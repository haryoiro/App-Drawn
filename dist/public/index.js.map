{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/public/index.ts"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,+CAA+C,4BAA4B;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG,kBAAkB;AACzH,mGAAmG,kBAAkB;AACrH,uGAAuG,kBAAkB;AACzH,uGAAuG,kBAAkB;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG,kBAAkB;AAClC;AACA;AACA,gBAAgB;AAChB,iGAAiG,kBAAkB;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,8FAA8F;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,8FAA8F;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,8FAA8F;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW,KAAK,WAAW;AAClE,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/public/index.ts\");\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// const socket = io(\"http://localhost:5000\", {transports: [ 'websocket' ]})\nconst socketOption = {\n    reconnectionDelay: 50000,\n    transports: ['websocket', 'polling']\n};\nconst socket = io(\"https://app-drawn.herokuapp.com\", socketOption);\nclass Application {\n    constructor(canvas, context2D) {\n        this.canvas = canvas;\n        this.context2D = context2D;\n        this.canvas = canvas;\n        this.context2D = context2D;\n    }\n    setUpView(width, height, color, hide = false, smooth = false) {\n        this._settingCanvasSize(width, height);\n        this._backgroundColor(color);\n        this._hideMenuHandler(hide);\n        this._isImageSmoothing(smooth);\n    }\n    _settingCanvasSize(width, height) {\n        this.canvas.width = width;\n        this.canvas.height = height;\n    }\n    clearAll() {\n        this.context2D.clearRect(0, 0, this.width, this.height);\n        this.context2D.beginPath();\n    }\n    _backgroundColor(color) {\n        this.context2D.fillStyle = color;\n        this.context2D.fillRect(0, 0, this.width, this.height);\n    }\n    _hideMenuHandler(bool) {\n        if (bool) {\n            document.addEventListener('contextmenu', e => e.preventDefault());\n            document.addEventListener('MSHoldVisal', e => e.preventDefault());\n        }\n    }\n    _isImageSmoothing(bool) {\n        this.context2D.imageSmoothingEnabled = bool;\n    }\n    // *getter/setter Method\n    get width() {\n        return this._width;\n    }\n    set width(value) {\n        this._width = value;\n    }\n    get height() {\n        return this._height;\n    }\n    set height(value) {\n        this._height = value;\n    }\n}\nconst eventStack = [];\nclass Tools extends Application {\n    constructor(element, context2D) {\n        super(element, context2D);\n        // ----- ツール関連プロパティ\n        this.canvasColor = \"#000\";\n        this.drawToggle = false;\n        this.eraserToggle = false;\n        this.pressureToggle = false;\n        // ----- PenSize用プロパティ -----\n        this.defRad = 10;\n        this.capStyle = 'round';\n        this.joinStyle = 'round';\n        this._pinchToggle = false;\n        // ---- - UndoRedo -------\n        // private STACK_MAX_SIZE: number = 100\n        // private undoStack = []\n        // private redoStack = []\n        this.emitStack = [];\n        this.eventActivation();\n    }\n    eventActivation() {\n        if (window.PointerEvent) {\n            this.canvas.addEventListener('pointerdown', (event) => this.downPointerController(event), { passive: false, });\n            this.canvas.addEventListener('pointerup', (event) => this.upPointerController(event), { passive: false, });\n            this.canvas.addEventListener('pointermove', (event) => this.movePointerController(event), { passive: false, });\n            this.canvas.addEventListener('pointercancel', (event) => this.leavePointerHandler(event), { passive: false, });\n            document.addEventListener('wheel', (event) => {\n                event.preventDefault();\n                this.nowR ? this.nowR : this.nowR = 1;\n                this.zoomX = event.pageX;\n                this.zoomY = event.pageY;\n                if (event.deltaY > 1) {\n                    this.nowR -= 0.2;\n                }\n                else if (event.deltaY < -1) {\n                    this.nowR += 0.2;\n                }\n                this._pinchHandle(event);\n            }, { passive: false, });\n            // this.canvas.addEventListener('pointerleave', event => this.leavePointerHandler(event), {\n            //   passive: false,\n            // });\n            document.addEventListener('pointerout', (event) => this.leavePointerHandler(event), { passive: false, });\n        }\n        else {\n            this.canvas.addEventListener('mousedown', (event) => this.downMouseHandler(event));\n            this.canvas.addEventListener('mouseup', (event) => this.upMouseHandler(event));\n            this.canvas.addEventListener('mousemove', (event) => this.moveMouseHandler(event));\n            this.canvas.addEventListener('mouseleave', (event) => this.leaveMouseHandler(event));\n        }\n    }\n    pointerSwitcher(event, pen, touch, mouse) {\n        switch (event.pointerType) {\n            case 'pen':\n                pen;\n                break;\n            case 'touch':\n                touch;\n                break;\n            case 'mouse':\n                mouse;\n                break;\n        }\n    }\n    // ---- PointerEvents ---\n    // !------ Switcher ------\n    // *- Main Callback Functions -\n    downPointerController(event) {\n        event.preventDefault();\n        this.pointerSwitcher(event, this.handlePenDown(event), this.handleTouchDown(event), this.handleMouseDown(event));\n    }\n    movePointerController(event) {\n        event.preventDefault();\n        this.pointerSwitcher(event, this.handlePenMove(event), this.handleTouchMove(event), this.handleMouseMove(event));\n    }\n    upPointerController(event) {\n        event.preventDefault();\n        this.pointerSwitcher(event, this.handlePenUp(event), this.handleTouchUp(event), this.handleMouseUp(event));\n    }\n    // ---- PointerEvents ---\n    // *------- DOWN -------\n    handlePenDown(event) {\n        event.preventDefault();\n        this.context2D.beginPath();\n        this.drawToggle = true;\n    }\n    handleTouchDown(event) {\n        event.preventDefault();\n        this.context2D.beginPath();\n        eventStack.push(event);\n        if (eventStack.length === 1) {\n            this.drawToggle = true;\n            this.p1 = eventStack[0];\n        }\n        if (eventStack.length >= 2) {\n            this.drawToggle = false;\n            this.p2 = eventStack[1];\n            this.pinchDist = this._calclationPointsDistance(this.p1.pageX, this.p1.pageY, this.p2.pageX, this.p2.pageY);\n            this.tp1x = (eventStack[0].pageX - this.canvas.offsetLeft);\n            this.tp1y = (eventStack[0].pageY - this.canvas.offsetTop);\n            this.distX = (eventStack[0].pageX - this.tp1x);\n            this.distY = (eventStack[0].pageY - this.tp1y);\n            this.nowR = this.dist / this.pinchDist;\n        }\n    }\n    handleMouseDown(event) {\n        event.preventDefault();\n        this.context2D.beginPath();\n        this.drawToggle = true;\n    }\n    // ---- PointerEvents ---\n    // *------- MOVE -------\n    handlePenMove(event) {\n        event.preventDefault();\n        if (this.drawToggle) {\n            this.context2D.lineWidth = this.initializePressure(event);\n            this.pencilTool(event);\n            this.stackPoint(this._puressurePoints(event));\n        }\n    }\n    handleMouseMove(event) {\n        event.preventDefault();\n        if (this.drawToggle) {\n            this.context2D.lineWidth = this.initializePressure(event);\n            this.pencilTool(event);\n            this.stackPoint(this._simplePoints(event));\n        }\n    }\n    handleTouchMove(event) {\n        event.preventDefault();\n        for (let i = 0; i < eventStack.length; i++) {\n            if (eventStack[i].pointerId === event.pointerId) {\n                eventStack[i] = event;\n            }\n        }\n        if (eventStack.length >= 3) {\n            this.drawToggle = false;\n            eventStack.splice(0, 2);\n        }\n        this.p1 = eventStack[0];\n        if (eventStack.length < 1 && this.drawToggle) {\n            this.context2D.lineWidth = this.initializePressure(event);\n            this.eraseTool();\n            this.settingPenConf(this.canvasColor, this.capStyle, this.joinStyle);\n            this.drawLine(event.offsetX, event.offsetY);\n            this.stackPoint(this._simplePoints(event));\n        }\n        if (eventStack.length >= 2) {\n            this.p2 = eventStack[1];\n            this.drawToggle = false;\n            this.dist = this._calclationPointsDistance(this.p1.pageX, this.p1.pageY, this.p2.pageX, this.p2.pageY);\n            this.nowR = this.dist / this.pinchDist;\n            this.distX = (eventStack[0].pageX - this.tp1x);\n            this.distY = (eventStack[0].pageY - this.tp1y);\n        }\n        this._pinchHandle(event);\n    }\n    // ---- PointerEvents ---\n    // *--------  UP  --------\n    handlePenUp(event) {\n        event.preventDefault();\n        this.drawToggle = false;\n        this.emitStack.push({ color: this.canvasColor, cap: this.capStyle, join: this.joinStyle, erase: this.eraserToggle });\n        this.emitPoint(this.emitStack);\n        this.emitStack = [];\n        this.context2D.beginPath();\n    }\n    handleTouchUp(event) {\n        event.preventDefault();\n        this.drawToggle = false;\n        this.emitStack.push({ color: this.canvasColor, cap: this.capStyle, join: this.joinStyle, erase: this.eraserToggle });\n        this.emitPoint(this.emitStack);\n        this.emitStack = [];\n        this.context2D.beginPath();\n        this._removeEventStack(event);\n    }\n    handleMouseUp(event) {\n        event.preventDefault();\n        this.drawToggle = false;\n        this.emitStack.push({ color: this.canvasColor, cap: this.capStyle, join: this.joinStyle, erase: this.eraserToggle });\n        this.emitPoint(this.emitStack);\n        this.emitStack = [];\n        this.context2D.beginPath();\n    }\n    // ---- PointerEvents ---\n    // *------- LEAVE -------\n    leavePointerHandler(event) {\n        event.preventDefault();\n        this.context2D.beginPath();\n        this.drawToggle = false;\n    }\n    // ---- MouseEvents ----\n    // *-- LEGACY EVENTS --\n    downMouseHandler(event) {\n        event.preventDefault();\n        this.drawToggle = true;\n    }\n    moveMouseHandler(event) {\n        event.preventDefault;\n        if (this.drawToggle) {\n            this.context2D.lineWidth = this.defRad * 0.5;\n            this.pencilTool(event);\n            this.stackPoint(this._simplePoints(event));\n        }\n    }\n    upMouseHandler(event) {\n        event.preventDefault();\n        this.drawToggle = false;\n        this.context2D.beginPath();\n    }\n    leaveMouseHandler(event) {\n        event.preventDefault();\n        this.drawToggle = false;\n    }\n    // ---- PencilTools ----\n    pencilTool(event) {\n        this.eraseTool();\n        this.settingPenConf(this.canvasColor, this.capStyle, this.joinStyle);\n        this.drawLine(event.offsetX, event.offsetY);\n    }\n    settingPenConf(color, capStyle, JoinStyle) {\n        this.context2D.strokeStyle = color;\n        this.context2D.fillStyle = color;\n        this.context2D.lineCap = capStyle;\n        this.context2D.lineJoin = JoinStyle;\n    }\n    drawLine(x, y) {\n        this.context2D.lineTo(x, y);\n        this.context2D.stroke();\n        this.context2D.beginPath();\n        this.context2D.moveTo(x, y);\n    }\n    eraseTool() {\n        this.eraserToggle\n            ? (this.context2D.globalCompositeOperation = 'destination-out')\n            : (this.context2D.globalCompositeOperation = 'source-over');\n    }\n    setPencilColor(color) {\n        this.canvasColor = color;\n    }\n    _calclationPointsDistance(x1, y1, x2, y2) {\n        const X = x1 - x2;\n        const Y = y1 - y2;\n        return Math.sqrt(X * X + Y * Y) / 2;\n    }\n    // 異常な筆圧値を丸める、筆圧によりペンのサイズを漸強/漸弱させる\n    initializePressure(event) {\n        let Rad = this.defRad;\n        if (event.pressure < 0.995 || event.pressure > 0.05) {\n            event.pressure ? (Rad *= event.pressure) : (Rad /= event.pressure);\n            return Rad;\n        }\n        else if (event.pressure <= 0.05 || event.pressure > 0.01) {\n            return Rad *= 0.05;\n        }\n        else if (event.pressure >= 0.995) {\n            return Rad *= 0.995;\n        }\n        else {\n            return Rad *= 0.5;\n        }\n    }\n    // タッチイベントをスタックから削除\n    _removeEventStack(event) {\n        for (let i = 0; i < eventStack.length; i++) {\n            if (eventStack[i].pointerId === event.pointerId) {\n                eventStack.splice(i, 1);\n            }\n        }\n    }\n    // ピンチズーム処理\n    _pinchHandle(event) {\n        let style = document.getElementById('canvas').style;\n        let scale;\n        const dpr = window.devicePixelRatio || 1;\n        if (this.nowR >= 20) {\n            this.nowR = 10;\n        }\n        else if (this.nowR <= 0.05) {\n            this.nowR = 0.05;\n        }\n        else {\n            style.transformOrigin = `${this.zoomX}px ${this.zoomY}px`;\n            scale = `scale(${this.nowR * dpr})`;\n        }\n        style.left = this.distX + 'px';\n        style.top = this.distY + 'px';\n        style.transform = scale;\n        style.webkitTransform = scale;\n        //@ts-ignore\n        style.MozTransform = scale;\n        //@ts-ignore\n        style.msTransform = scale;\n    }\n    _puressurePoints(event) {\n        return { X: event.offsetX, Y: event.offsetY, pressure: event.pressure };\n    }\n    _simplePoints(event) {\n        return { X: event.offsetX, Y: event.offsetY, pressure: 0 };\n    }\n    abs(number) {\n        return (number * number) / 2;\n    }\n    undoRedo() {\n    }\n    // ---- - Socket.IO -----\n    stackPoint(pointObj) {\n        this.emitStack.push(pointObj);\n    }\n    emitPoint(pointObj) {\n        socket.emit('point', pointObj);\n    }\n}\nfunction Timer(delay) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise(resolve => {\n            setTimeout(() => resolve(), delay);\n        });\n    });\n}\nclass socketer {\n    constructor() {\n    }\n    pointerAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield socket.on('allCanvas', (canvas) => __awaiter(this, void 0, void 0, function* () {\n                for (const o in canvas) {\n                    let points = canvas[o];\n                    view.settingPenConf(points[points.length - 1].color, points[points.length - 1].cap, points[points.length - 1].join);\n                    if (points[points.length - 1].erase) {\n                        view.context2D.globalCompositeOperation = 'destination-out';\n                    }\n                    for (let i in points) {\n                        view.context2D.lineWidth = view.initializePressure(points[i]);\n                        view.drawLine(points[i].X, points[i].Y);\n                    }\n                    view.eraseTool();\n                }\n            }));\n            yield socket.on('point', (points) => __awaiter(this, void 0, void 0, function* () {\n                view.context2D.beginPath();\n                view.settingPenConf(points[points.length - 1].color, points[points.length - 1].cap, points[points.length - 1].join);\n                if (points[points.length - 1].erase) {\n                    view.context2D.globalCompositeOperation = 'destination-out';\n                }\n                for (let i in points) {\n                    view.context2D.lineWidth = view.initializePressure(points[i]);\n                    view.drawLine(points[i].X, points[i].Y);\n                    view.context2D.lineTo(points[i].X, points[i].Y);\n                    view.context2D.stroke();\n                    view.context2D.beginPath();\n                    view.context2D.moveTo(points[i].X, points[i].Y);\n                }\n                view.eraseTool();\n            }));\n            socket.on('clear', () => {\n                view.context2D.clearRect(0, 0, 1920, 1080);\n            });\n        });\n    }\n}\nclass Buttons {\n    constructor() {\n        this.pencil = document.querySelector(\"#pencil\");\n        this.eraser = document.querySelector(\"#eraser\");\n        this.fill = document.querySelector(\"#fill\");\n        this.palatte = document.querySelector(\"#palatte\");\n        this.dl = document.querySelector(\"#download\");\n        this.chat = document.querySelector(\"#textChat\");\n        this.pencilSettingWindow = document.querySelector('.pencil-settings');\n        this.eraserSettingWindow = document.querySelector('.eraser-settings');\n        this.chatWindow = document.querySelector('.chat-window');\n    }\n    elementActivate() {\n        this.pencil.addEventListener('click', () => {\n            this.pencil.classList.contains('active') ? this.pencil.classList.contains(' ') : this.pencil.classList.add('active');\n            if (this.pencil.classList.contains('active')) {\n                this.eraser.classList.remove('active');\n                this.fill.classList.remove('active');\n                this.pencil.classList.add('active');\n                view.eraserToggle = false;\n            }\n            this.pencilSettingWindow.classList.toggle('show', true);\n            this.eraserSettingWindow.classList.toggle('show', false);\n            this.chatWindow.classList.toggle('show', false);\n        });\n        this.eraser.addEventListener('click', () => {\n            this.eraser.classList.contains('active') ? this.eraser.classList.contains(' ') : this.eraser.classList.add('active');\n            if (this.eraser.classList.contains('active')) {\n                this.pencil.classList.remove('active');\n                this.fill.classList.remove('active');\n                this.eraser.classList.add('active');\n                view.eraserToggle = true;\n            }\n            this.eraserSettingWindow.classList.toggle('show', true);\n            this.pencilSettingWindow.classList.toggle('show', false);\n            this.chatWindow.classList.toggle('show', false);\n        });\n        this.chat.addEventListener('click', () => {\n            if (this.chat.classList.contains('active')) {\n                this.pencil.classList.remove('active');\n                this.fill.classList.remove('active');\n                this.eraser.classList.remove('active');\n            }\n            this.chatWindow.classList.toggle('show', true);\n            this.pencilSettingWindow.classList.toggle('show', false);\n            this.eraserSettingWindow.classList.toggle('show', false);\n        });\n    }\n}\nconst virtualCanvas = document.createElement('canvas').getContext('2d');\ndocument.addEventListener('pointermove', (event) => {\n    // virtualCanvas.arc(event.pageX, event.pageY)\n});\nconst canvas = document.querySelector('#canvas');\nconst graphic = canvas.getContext('2d');\nconst view = new Tools(canvas, graphic);\n// Application.prototype.serUpView\n//    (context , backgroundColor, hideMenu, smoothRendering)\nview.setUpView(1920, 1080, '#ffffff', true, false);\nconst socketInit = new socketer();\nsocketInit.pointerAsync();\nconst domButton = new Buttons();\ndomButton.elementActivate();\n// const clearButton = document.getElementById('clear')\n// clearButton?.addEventListener('click', () => {\n//   view.context2D.clearRect(0, 0, 1920, 1080)\n//   socket.emit('clear')\n// })\n"],"sourceRoot":""}